openapi: 3.0.1
info:
  title: sakiewka-crypto-local
  version: '1.0'
paths:
  /api/v1.0/user/register:
    post:
      operationId: postApi/v1.0UserRegister
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_EmptyResponse'
  /api/v1.0/user/setup-password:
    post:
      operationId: postApi/v1.0UserSetup-password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetupPasswordRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_EmptyResponse'
      security:
      - httpAuth: []
  /api/v1.0/user/login:
    post:
      operationId: postApi/v1.0UserLogin
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_LoginResponse'
  /api/v1.0/user/info:
    get:
      operationId: getApi/v1.0UserInfo
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_UserInfoResponse'
      security:
      - httpAuth: []
  /api/v1.0/user/logout:
    post:
      operationId: postApi/v1.0UserLogout
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_EmptyResponse'
      security:
      - httpAuth: []
  /api/v1.0/user/2fa/confirm:
    post:
      tags:
      - user
      operationId: postApi/v1.0User2faConfirm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Confirm2faRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_EmptyResponse'
      security:
      - httpAuth: []
  /api/v1.0/user/2fa/init:
    post:
      tags:
      - user
      operationId: postApi/v1.0User2faInit
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Init2faRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_Init2FaResponse'
      security:
      - httpAuth: []
  /api/v1.0/user/2fa/disable:
    post:
      tags:
      - user
      operationId: postApi/v1.0User2faDisable
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Disable2faRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_EmptyResponse'
      security:
      - httpAuth: []
  /api/v1.0/transfers/monthly-summary/{month}/{year}/{fiatCurrency}:
    get:
      tags:
      - transfers
      operationId: getApi/v1.0TransfersMonthly-summaryMonthYearFiatcurrency
      parameters:
      - name: month
        in: path
        required: true
        schema:
          type: integer
      - name: year
        in: path
        required: true
        schema:
          type: integer
      - name: fiatCurrency
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_UserPeriodSummary'
      security:
      - httpAuth: []
  /api/v1.0/transfers:
    get:
      tags:
      - transfers
      operationId: getApi/v1.0Transfers
      parameters:
      - name: limit
        in: query
        required: true
        schema:
          type: integer
      - name: nextPageToken
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_ListBtcTransfer'
      security:
      - httpAuth: []
  /api/v1.0/btc/wallet:
    get:
      tags:
      - btc
      operationId: getApi/v1.0BtcWallet
      parameters:
      - name: limit
        in: query
        required: true
        schema:
          type: integer
      - name: nextPageToken
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_ListWalletsResponse'
      security:
      - httpAuth: []
    post:
      tags:
      - btc
      operationId: postApi/v1.0BtcWallet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWalletRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_CreateWalletResponse'
      security:
      - httpAuth: []
  /api/v1.0/btc/wallet/{walletId}:
    get:
      tags:
      - btc
      operationId: getApi/v1.0BtcWalletWalletid
      parameters:
      - name: walletId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_GetWalletResponse'
      security:
      - httpAuth: []
  /api/v1.0/btc/wallet/{walletId}/address/{address}:
    get:
      tags:
      - btc
      operationId: getApi/v1.0BtcWalletWalletidAddressAddress
      parameters:
      - name: walletId
        in: path
        required: true
        schema:
          type: string
      - name: address
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_GetAddressResponse'
      security:
      - httpAuth: []
  /api/v1.0/btc/wallet/{walletId}/address:
    get:
      tags:
      - btc
      operationId: getApi/v1.0BtcWalletWalletidAddress
      parameters:
      - name: walletId
        in: path
        required: true
        schema:
          type: string
      - name: limit
        in: query
        required: true
        schema:
          type: integer
      - name: nextPageToken
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_ListAddressesResponse'
      security:
      - httpAuth: []
    post:
      tags:
      - btc
      operationId: postApi/v1.0BtcWalletWalletidAddress
      parameters:
      - name: walletId
        in: path
        required: true
        schema:
          type: string
      - name: change
        in: query
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAddressRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_CreateAddressResponse'
      security:
      - httpAuth: []
  /api/v1.0/btc/key/{keyId}:
    get:
      tags:
      - btc
      operationId: getApi/v1.0BtcKeyKeyid
      parameters:
      - name: keyId
        in: path
        required: true
        schema:
          type: string
      - name: includePrivate
        in: query
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_GetKeyResponse'
      security:
      - httpAuth: []
  /api/v1.0/btc/key/local:
    post:
      tags:
      - btc
      operationId: postApi/v1.0BtcKeyLocal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKeyRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_KeyPairResponse'
  /api/v1.0/btc/key/local/decrypt:
    post:
      tags:
      - btc
      operationId: postApi/v1.0BtcKeyLocalDecrypt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DecryptKeyRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_KeyPairResponse'
  /api/v1.0/btc/key/local/encrypt:
    post:
      tags:
      - btc
      operationId: postApi/v1.0BtcKeyLocalEncrypt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncryptKeyRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_KeyPairResponse'
  /api/v1.0/btc/wallet/{walletId}/send:
    post:
      tags:
      - btc
      operationId: postApi/v1.0BtcWalletWalletidSend
      parameters:
      - name: walletId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_String'
      security:
      - httpAuth: []
  /api/v1.0/btc/wallet/{walletId}/webhook/{webhookId}:
    get:
      tags:
      - btc
      operationId: getApi/v1.0BtcWalletWalletidWebhookWebhookid
      parameters:
      - name: walletId
        in: path
        required: true
        schema:
          type: string
      - name: webhookId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_GetWebhookResponse'
      security:
      - httpAuth: []
    delete:
      tags:
      - btc
      operationId: deleteApi/v1.0BtcWalletWalletidWebhookWebhookid
      parameters:
      - name: walletId
        in: path
        required: true
        schema:
          type: string
      - name: webhookId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebhookRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_EmptyResponse'
      security:
      - httpAuth: []
  /api/v1.0/btc/wallet/{walletId}/webhook:
    get:
      tags:
      - btc
      operationId: getApi/v1.0BtcWalletWalletidWebhook
      parameters:
      - name: walletId
        in: path
        required: true
        schema:
          type: string
      - name: limit
        in: query
        required: true
        schema:
          type: integer
      - name: nextPageToken
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_GetWebhookListResponse'
      security:
      - httpAuth: []
    post:
      tags:
      - btc
      operationId: postApi/v1.0BtcWalletWalletidWebhook
      parameters:
      - name: walletId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebhookRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_EmptyResponse'
      security:
      - httpAuth: []
  /api/v1.0/btc/wallet/{walletId}/transfers/{txHash}:
    get:
      tags:
      - btc
      operationId: getApi/v1.0BtcWalletWalletidTransfersTxhash
      parameters:
      - name: walletId
        in: path
        required: true
        schema:
          type: string
      - name: txHash
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_List_BitcoinTransferWithHistoryResponse'
      security:
      - httpAuth: []
  /api/v1.0/btc/wallet/{walletId}/transfers:
    get:
      tags:
      - btc
      operationId: getApi/v1.0BtcWalletWalletidTransfers
      parameters:
      - name: walletId
        in: path
        required: true
        schema:
          type: string
      - name: limit
        in: query
        required: true
        schema:
          type: integer
      - name: nextPageToken
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_ListBtcTransfer'
      security:
      - httpAuth: []
  /api/v1.0/btc/wallet/{walletId}/{address}/utxo:
    get:
      tags:
      - btc
      operationId: getApi/v1.0BtcWalletWalletidAddressUtxo
      parameters:
      - name: walletId
        in: path
        required: true
        schema:
          type: string
      - name: address
        in: path
        required: true
        schema:
          type: string
      - name: limit
        in: query
        required: true
        schema:
          type: integer
      - name: nextPageToken
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_ListUtxosByAddress'
      security:
      - httpAuth: []
  /api/v1.0/btg/wallet:
    get:
      tags:
      - btg
      operationId: getApi/v1.0BtgWallet
      parameters:
      - name: limit
        in: query
        required: true
        schema:
          type: integer
      - name: nextPageToken
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_ListWalletsResponse'
      security:
      - httpAuth: []
    post:
      tags:
      - btg
      operationId: postApi/v1.0BtgWallet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWalletRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_CreateWalletResponse'
      security:
      - httpAuth: []
  /api/v1.0/btg/wallet/{walletId}:
    get:
      tags:
      - btg
      operationId: getApi/v1.0BtgWalletWalletid
      parameters:
      - name: walletId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_GetWalletResponse'
      security:
      - httpAuth: []
  /api/v1.0/btg/wallet/{walletId}/address/{address}:
    get:
      tags:
      - btg
      operationId: getApi/v1.0BtgWalletWalletidAddressAddress
      parameters:
      - name: walletId
        in: path
        required: true
        schema:
          type: string
      - name: address
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_GetAddressResponse'
      security:
      - httpAuth: []
  /api/v1.0/btg/wallet/{walletId}/address:
    get:
      tags:
      - btg
      operationId: getApi/v1.0BtgWalletWalletidAddress
      parameters:
      - name: walletId
        in: path
        required: true
        schema:
          type: string
      - name: limit
        in: query
        required: true
        schema:
          type: integer
      - name: nextPageToken
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_ListAddressesResponse'
      security:
      - httpAuth: []
    post:
      tags:
      - btg
      operationId: postApi/v1.0BtgWalletWalletidAddress
      parameters:
      - name: walletId
        in: path
        required: true
        schema:
          type: string
      - name: change
        in: query
        required: false
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAddressRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_CreateAddressResponse'
      security:
      - httpAuth: []
  /api/v1.0/btg/key/{keyId}:
    get:
      tags:
      - btg
      operationId: getApi/v1.0BtgKeyKeyid
      parameters:
      - name: keyId
        in: path
        required: true
        schema:
          type: string
      - name: includePrivate
        in: query
        required: false
        schema:
          type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_GetKeyResponse'
      security:
      - httpAuth: []
  /api/v1.0/btg/key/local:
    post:
      tags:
      - btg
      operationId: postApi/v1.0BtgKeyLocal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKeyRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_KeyPairResponse'
  /api/v1.0/btg/key/local/decrypt:
    post:
      tags:
      - btg
      operationId: postApi/v1.0BtgKeyLocalDecrypt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DecryptKeyRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_KeyPairResponse'
  /api/v1.0/btg/key/local/encrypt:
    post:
      tags:
      - btg
      operationId: postApi/v1.0BtgKeyLocalEncrypt
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncryptKeyRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_KeyPairResponse'
  /api/v1.0/btg/wallet/{walletId}/send:
    post:
      tags:
      - btg
      operationId: postApi/v1.0BtgWalletWalletidSend
      parameters:
      - name: walletId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_String'
      security:
      - httpAuth: []
  /api/v1.0/btg/wallet/{walletId}/webhook/{webhookId}:
    get:
      tags:
      - btg
      operationId: getApi/v1.0BtgWalletWalletidWebhookWebhookid
      parameters:
      - name: walletId
        in: path
        required: true
        schema:
          type: string
      - name: webhookId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_GetWebhookResponse'
      security:
      - httpAuth: []
    delete:
      tags:
      - btg
      operationId: deleteApi/v1.0BtgWalletWalletidWebhookWebhookid
      parameters:
      - name: walletId
        in: path
        required: true
        schema:
          type: string
      - name: webhookId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebhookRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_EmptyResponse'
      security:
      - httpAuth: []
  /api/v1.0/btg/wallet/{walletId}/webhook:
    get:
      tags:
      - btg
      operationId: getApi/v1.0BtgWalletWalletidWebhook
      parameters:
      - name: walletId
        in: path
        required: true
        schema:
          type: string
      - name: limit
        in: query
        required: true
        schema:
          type: integer
      - name: nextPageToken
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_GetWebhookListResponse'
      security:
      - httpAuth: []
    post:
      tags:
      - btg
      operationId: postApi/v1.0BtgWalletWalletidWebhook
      parameters:
      - name: walletId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebhookRequest'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_EmptyResponse'
      security:
      - httpAuth: []
  /api/v1.0/btg/wallet/{walletId}/transfers/{txHash}:
    get:
      tags:
      - btg
      operationId: getApi/v1.0BtgWalletWalletidTransfersTxhash
      parameters:
      - name: walletId
        in: path
        required: true
        schema:
          type: string
      - name: txHash
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_List_BitcoinTransferWithHistoryResponse'
      security:
      - httpAuth: []
  /api/v1.0/btg/wallet/{walletId}/transfers:
    get:
      tags:
      - btg
      operationId: getApi/v1.0BtgWalletWalletidTransfers
      parameters:
      - name: walletId
        in: path
        required: true
        schema:
          type: string
      - name: limit
        in: query
        required: true
        schema:
          type: integer
      - name: nextPageToken
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_ListBtcTransfer'
      security:
      - httpAuth: []
  /api/v1.0/fee-rate:
    get:
      tags:
      - btc
      operationId: getApi/v1.0Fee-rate
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_GetFeeRate_OUT'
  /api/v1.0/btg/wallet/{walletId}/{address}/utxo:
    get:
      tags:
      - btg
      operationId: getApi/v1.0BtgWalletWalletidAddressUtxo
      parameters:
      - name: walletId
        in: path
        required: true
        schema:
          type: string
      - name: address
        in: path
        required: true
        schema:
          type: string
      - name: limit
        in: query
        required: true
        schema:
          type: integer
      - name: nextPageToken
        in: query
        required: false
        schema:
          type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success_OUT_ListUtxosByAddress'
      security:
      - httpAuth: []
components:
  schemas:
    CreateWebhookRequest:
      required:
      - callbackUrl
      - type
      - webhookSettings
      type: object
      properties:
        callbackUrl:
          type: string
        type:
          oneOf:
          - $ref: '#/components/schemas/Transfer'
        webhookSettings:
          oneOf:
          - $ref: '#/components/schemas/TransferWebhookSettings'
    CreateWalletRequest:
      required:
      - name
      type: object
      properties:
        name:
          type: string
        passphrase:
          type: string
        userPubKey:
          type: string
        backupPubKey:
          type: string
    Init2FaResponse:
      required:
      - qrCodeUrl
      - email
      - secretKey
      type: object
      properties:
        qrCodeUrl:
          type: string
        email:
          type: string
        secretKey:
          type: string
    Success_OUT_CreateAddressResponse:
      required:
      - data
      - status
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CreateAddressResponse'
        status:
          type: string
    DecryptKeyRequest:
      required:
      - keyPair
      - passphrase
      type: object
      properties:
        keyPair:
          $ref: '#/components/schemas/KeyPair'
        passphrase:
          type: string
    Success_OUT_GetWebhookListResponse:
      required:
      - data
      - status
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GetWebhookListResponse'
        status:
          type: string
    SetupPasswordRequest:
      required:
      - password
      type: object
      properties:
        password:
          type: string
    SendRequest:
      required:
      - recipients
      type: object
      properties:
        xprv:
          type: string
        recipients:
          type: array
          items:
            $ref: '#/components/schemas/Recipients_IN'
        passphrase:
          type: string
        feeRate:
          type: integer
    KeyPair:
      required:
      - pubKey
      - prvKey
      type: object
      properties:
        pubKey:
          type: string
        prvKey:
          type: string
    LoginResponse:
      required:
      - token
      type: object
      properties:
        token:
          type: string
    UserPeriodSummaryCurrencyEntry:
      required:
      - chain
      - totalOutputsOther
      - totalOutputsWallet
      - totalOutputsService
      - totalOutputsOtherInFiat
      - totalOutputsWalletInFiat
      - totalOutputsServiceInFiat
      type: object
      properties:
        chain:
          type: string
        totalOutputsOther:
          type: string
        totalOutputsWallet:
          type: string
        totalOutputsService:
          type: string
        totalOutputsOtherInFiat:
          type: string
        totalOutputsWalletInFiat:
          type: string
        totalOutputsServiceInFiat:
          type: string
    CreateAddressRequest:
      type: object
      properties:
        name:
          type: string
    Success_OUT_GetFeeRate_OUT:
      required:
      - data
      - status
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GetFeeRate_OUT'
        status:
          type: string
    Backup:
      type: object
    CreateKeyRequest:
      type: object
      properties:
        passphrase:
          type: string
    Recipients_IN:
      required:
      - address
      - amount
      type: object
      properties:
        address:
          type: string
        amount:
          type: string
    Success_OUT_GetAddressResponse:
      required:
      - data
      - status
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GetAddressResponse'
        status:
          type: string
    MaxTransferResponse:
      required:
      - amount
      type: object
      properties:
        amount:
          type: string
    Success_OUT_GetWebhookResponse:
      required:
      - data
      - status
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GetWebhookResponse'
        status:
          type: string
    ListAddressesResponse:
      required:
      - addresses
      type: object
      properties:
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/GetAddressResponse'
        nextPageToken:
          type: string
    UserPeriodSummary:
      required:
      - chains
      type: object
      properties:
        chains:
          type: array
          items:
            $ref: '#/components/schemas/UserPeriodSummaryCurrencyEntry'
    BitcoinTx:
      required:
      - hash
      - inputs
      - outputs
      type: object
      properties:
        hash:
          type: string
        inputs:
          $ref: '#/components/schemas/ClassifiedRecipients'
        outputs:
          $ref: '#/components/schemas/ClassifiedRecipients'
    Success_OUT_ListUtxosByAddress:
      required:
      - data
      - status
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ListUtxosByAddress'
        status:
          type: string
    CreateAddressResponse:
      required:
      - address
      - path
      type: object
      properties:
        address:
          type: string
        path:
          $ref: '#/components/schemas/BIP45DerivationPath'
    Map:
      type: object
    StoredKeyType:
      required:
      - id
      - type
      type: object
      properties:
        id:
          type: string
        type:
          oneOf:
          - $ref: '#/components/schemas/User'
          - $ref: '#/components/schemas/Service'
          - $ref: '#/components/schemas/Backup'
    Service:
      type: object
    Success_OUT_ListAddressesResponse:
      required:
      - data
      - status
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ListAddressesResponse'
        status:
          type: string
    BIP45DerivationPath:
      required:
      - cosignerIndex
      - change
      - addressIndex
      type: object
      properties:
        cosignerIndex:
          type: integer
        change:
          type: integer
        addressIndex:
          type: integer
    Wallet1:
      required:
      - id
      - name
      - currency
      - created
      - balance
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        currency:
          type: string
        created:
          type: string
          format: date-time
        balance:
          $ref: '#/components/schemas/WalletBalance'
    Transfer:
      type: object
    GetWalletResponse:
      required:
      - id
      - name
      - currency
      - created
      - keys
      - balance
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        currency:
          type: string
        created:
          type: string
          format: date-time
        keys:
          type: array
          items:
            type: string
        balance:
          $ref: '#/components/schemas/WalletBalance'
    BitcoinBlock:
      required:
      - hash
      - number
      - timestamp
      type: object
      properties:
        hash:
          type: string
        number:
          type: integer
        timestamp:
          type: string
          format: date-time
    Success_OUT_LoginResponse:
      required:
      - data
      - status
      type: object
      properties:
        data:
          $ref: '#/components/schemas/LoginResponse'
        status:
          type: string
    GetFeeRate_OUT:
      required:
      - recommended
      type: object
      properties:
        recommended:
          type: integer
    WalletBalance:
      required:
      - available
      - locked
      type: object
      properties:
        available:
          type: string
        locked:
          type: string
    UserInfoResponse:
      required:
      - email
      - token
      - tokenInfo
      - expiry
      type: object
      properties:
        email:
          type: string
        token:
          type: string
        tokenInfo:
          $ref: '#/components/schemas/TokenInfo'
        expiry:
          type: string
          format: date-time
    Success_OUT_GetKeyResponse:
      required:
      - data
      - status
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GetKeyResponse'
        status:
          type: string
    TransferWebhookSettings:
      required:
      - confirmations
      type: object
      properties:
        confirmations:
          type: integer
    Success_OUT_MaxTransferResponse:
      required:
      - data
      - status
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MaxTransferResponse'
        status:
          type: string
    ListWalletsResponse:
      required:
      - data
      - nextPageToken
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Wallet1'
        nextPageToken:
          type: string
    GetWebhookListResponse:
      required:
      - webhooks
      type: object
      properties:
        webhooks:
          type: array
          items:
            $ref: '#/components/schemas/GetWebhookResponse'
        nextPageToken:
          type: string
    User:
      type: object
    ListUtxosByAddress:
      required:
      - outputs
      type: object
      properties:
        outputs:
          type: array
          items:
            $ref: '#/components/schemas/BitcoinUnspentOutputWithPath'
        nextPageToken:
          type: string
    Success_OUT_String:
      required:
      - data
      - status
      type: object
      properties:
        data:
          type: string
        status:
          type: string
    Init2faRequest:
      required:
      - password
      type: object
      properties:
        password:
          type: string
    LoginRequest:
      required:
      - login
      - password
      type: object
      properties:
        login:
          type: string
        password:
          type: string
        code:
          type: string
    EncryptKeyRequest:
      required:
      - keyPair
      - passphrase
      type: object
      properties:
        keyPair:
          $ref: '#/components/schemas/KeyPair'
        passphrase:
          type: string
    BitcoinTransferHistoryItem:
      required:
      - timestamp
      - type
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        block:
          $ref: '#/components/schemas/BitcoinBlock'
        type:
          type: string
    GetWebhookResponse:
      required:
      - id
      - walletId
      - callbackUrl
      - settings
      type: object
      properties:
        id:
          type: string
        walletId:
          type: string
        callbackUrl:
          type: string
        settings:
          oneOf:
          - $ref: '#/components/schemas/TransferWebhookSettings'
    TokenInfo:
      required:
      - scope
      type: object
      properties:
        scope:
          type: array
          items:
            type: string
    CreateWalletResponse:
      required:
      - id
      - initialAddress
      - servicePubKey
      - keys
      type: object
      properties:
        id:
          type: string
        initialAddress:
          type: string
        servicePubKey:
          type: string
        keys:
          type: array
          items:
            type: string
    GetAddressResponse:
      required:
      - id
      - address
      - path
      - created
      type: object
      properties:
        id:
          type: string
        address:
          type: string
        path:
          $ref: '#/components/schemas/BIP45DerivationPath'
        name:
          type: string
        created:
          type: string
          format: date-time
    EmptyResponse:
      type: object
    Success_OUT_EmptyResponse:
      required:
      - data
      - status
      type: object
      properties:
        data:
          $ref: '#/components/schemas/EmptyResponse'
        status:
          type: string
    ClassifiedRecipients:
      required:
      - wallet
      - service
      - other
      type: object
      properties:
        wallet:
          $ref: '#/components/schemas/Map'
        service:
          $ref: '#/components/schemas/Map'
        other:
          $ref: '#/components/schemas/Map'
    Success_OUT_Init2FaResponse:
      required:
      - data
      - status
      type: object
      properties:
        data:
          $ref: '#/components/schemas/Init2FaResponse'
        status:
          type: string
    Success_OUT_List_BitcoinTransferWithHistoryResponse:
      required:
      - data
      - status
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BitcoinTransferWithHistoryResponse'
        status:
          type: string
    BitcoinTransferWithHistoryResponse:
      required:
      - wallet
      - timestamp
      - transaction
      - history
      type: object
      properties:
        wallet:
          $ref: '#/components/schemas/Wallet1'
        timestamp:
          type: string
          format: date-time
        transaction:
          $ref: '#/components/schemas/BitcoinTx'
        block:
          $ref: '#/components/schemas/BitcoinBlock'
        history:
          type: array
          items:
            $ref: '#/components/schemas/BitcoinTransferHistoryItem'
    Success_OUT_ListBtcTransfer:
      required:
      - data
      - status
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ListBtcTransfer'
        status:
          type: string
    Wallet:
      required:
      - id
      - balance
      type: object
      properties:
        id:
          type: string
        balance:
          type: string
    Success_OUT_UserPeriodSummary:
      required:
      - data
      - status
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UserPeriodSummary'
        status:
          type: string
    BitcoinTransfer:
      required:
      - chain
      - wallet
      - timestamp
      - transaction
      type: object
      properties:
        chain:
          type: string
        wallet:
          $ref: '#/components/schemas/Wallet'
        timestamp:
          type: string
          format: date-time
        transaction:
          $ref: '#/components/schemas/BitcoinTx'
        block:
          $ref: '#/components/schemas/BitcoinBlock'
    Success_OUT_ListWalletsResponse:
      required:
      - data
      - status
      type: object
      properties:
        data:
          $ref: '#/components/schemas/ListWalletsResponse'
        status:
          type: string
    KeyPairResponse:
      required:
      - keyPair
      type: object
      properties:
        keyPair:
          $ref: '#/components/schemas/KeyPair'
    RegisterRequest:
      required:
      - login
      type: object
      properties:
        login:
          type: string
    BitcoinUnspentOutputWithPath:
      required:
      - txHash
      - n
      - amount
      - path
      type: object
      properties:
        txHash:
          type: string
        n:
          type: integer
        amount:
          type: string
        path:
          $ref: '#/components/schemas/BIP45DerivationPath'
    Success_OUT_CreateWalletResponse:
      required:
      - data
      - status
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CreateWalletResponse'
        status:
          type: string
    Success_OUT_UserInfoResponse:
      required:
      - data
      - status
      type: object
      properties:
        data:
          $ref: '#/components/schemas/UserInfoResponse'
        status:
          type: string
    Success_OUT_KeyPairResponse:
      required:
      - data
      - status
      type: object
      properties:
        data:
          $ref: '#/components/schemas/KeyPairResponse'
        status:
          type: string
    Confirm2faRequest:
      required:
      - password
      - code
      type: object
      properties:
        password:
          type: string
        code:
          type: integer
    GetKeyResponse:
      required:
      - id
      - pubKey
      - keyType
      - created
      type: object
      properties:
        id:
          type: string
        pubKey:
          type: string
        prvKey:
          type: string
        keyType:
          $ref: '#/components/schemas/StoredKeyType'
        created:
          type: string
          format: date-time
    ListBtcTransfer:
      required:
      - transfers
      type: object
      properties:
        transfers:
          type: array
          items:
            $ref: '#/components/schemas/BitcoinTransfer'
        nextPageToken:
          type: string
    Disable2faRequest:
      required:
      - password
      - code
      type: object
      properties:
        password:
          type: string
        code:
          type: integer
    Success_OUT_GetWalletResponse:
      required:
      - data
      - status
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GetWalletResponse'
        status:
          type: string
  securitySchemes:
    httpAuth:
      type: http
      scheme: bearer
